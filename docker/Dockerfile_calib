#FROM ros:galactic-ros-base
FROM osrf/ros:galactic-desktop

ARG DEBIAN_FRONTEND=noninteractive
ARG WS_RELATIVE_ROOT=.

ENV HTTP_PROXY          http://proxy-dmz.intel.com:912/
ENV http_proxy          http://proxy-dmz.intel.com:912/
ENV HTTPS_PROXY         http://proxy-dmz.intel.com:912/
ENV https_proxy         http://proxy-dmz.intel.com:912/
ENV NO_PROXY            localhost,127.0.0.0/8,::1,*.intel.com
ENV no_proxy            localhost,127.0.0.0/8,::1,*.intel.com


RUN apt-get update && apt-get install --no-install-recommends -y git python3.8 \
                         python3.8-dev python3.8-distutils python3-pip wget build-essential cmake \
                         libgtk-3-dev libjpeg8-dev zlib1g-dev libtiff5-dev \
                        googletest pybind11-dev libpython3-dev libopencv-dev libeigen3-dev \
                        libpcl-dev libtbb-dev libomp-dev libgoogle-glog-dev libgflags-dev libatlas-base-dev \
                        libsuitesparse-dev ros-galactic-vision-msgs ros-galactic-cv-bridge && rm -rf /var/lib/apt/lists/*


RUN apt-get update && DEBIAN_FRONTEND=noninteractive \
    apt-get install -y \ 
    ros-galactic-desktop ros-galactic-realsense2-camera


# Install librealsense - currently does not include SC. one need to change to RS dev repo
RUN apt-get update && DEBIAN_FRONTEND=noninteractive \
    apt-get install -y \ 
    software-properties-common
RUN apt-key adv --keyserver-options http-proxy=http://proxy-chain.intel.com:911 --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
RUN add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u

RUN apt-get update && DEBIAN_FRONTEND=noninteractive \
    apt-get install -y \ 
    librealsense2-dkms librealsense2-utils


RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install --upgrade setuptools==58.2.0 wheel
#RUN python3 -m pip install torch==1.8.2 torchvision==0.9.2 --extra-index-url https://download.pytorch.org/whl/lts/1.8/cpu

RUN apt-get update && apt-get install terminator vim nano libgflags-dev libprotobuf-dev protobuf-compiler usbutils apt-utils -y
RUN apt-get install libatlas-base-dev libblas-dev libboost-all-dev libeigen3-dev libsuitesparse-dev libgoogle-glog-dev libtbb-dev libcanberra-gtk-module -y

# Required to build apriltags2_ethz 
env APPVEYOR_REPO_TAG_NAME=0.9.5

RUN python3 -m pip install rosbags>=0.9.12

#copy all the source files to the image
COPY ${WS_RELATIVE_ROOT} /root/ws/
WORKDIR /root/ws/aicv_amr_calibration
RUN rm -rf build/ install/ log/


# Bulding multisensor-calibration-library
#WORKDIR /root/ws/aicv_amr_calibration/src/multisensor-calibration-library
#RUN python3 setup.py bdist_wheel
#RUN python3 -m pip install dist/quarz-1.0.0-cp38-cp38-linux_x86_64.whl


# Bulding multisensor-calibration-toolkit
WORKDIR /root/ws/aicv_amr_calibration/src/multisensor-calibration-toolkit
RUN mkdir -p /home/tools

RUN cp requirements.txt /home/tools/
RUN python3 -m pip install --ignore-installed -r /home/tools/requirements.txt

RUN cp -r transform-graph /home/tools
RUN python3 -m pip install /home/tools/transform-graph

#WORKDIR /root/ws/aicv_amr_calibration/src
RUN cp -r torchauto /home/tools/
RUN python3 -m pip install /home/tools/torchauto
ENV PATH=$PATH:/home/tools/torchauto/scripts/inspect_dataset

RUN cp -r data-collection /home/tools/
RUN python3 -m pip install /home/tools/data-collection

RUN cp -r robot-vision /home/tools/
RUN python3 -m pip install /home/tools/robot-vision

RUN cp -r quarz /home/tools/quarz
RUN python3 -m pip install /home/tools/quarz

#WORKDIR /root/ws/aicv_amr_calibration/src/multisensor-calibration-toolkit
RUN cp -r calibration-tools /home/tools
RUN python3 -m pip install /home/tools/calibration-tools

RUN cp -r scripts /home/tools

RUN cp -r config /home/tools/scripts

RUN mv /root/ws/aicv_amr_calibration/scripts/* /home/tools/scripts

RUN mkdir -p /workspace/bags
RUN mkdir -p /workspace/data
RUN mkdir -p /workspace/datasets

RUN cp -r notebooks /workspace/

WORKDIR /home/tools/scripts

